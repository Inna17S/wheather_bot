import telebot
from telebot import types
import requests
import time
import requests

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è API-–∫–ª—é—á–∞ OpenWeatherMap
API_KEY = ''

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
bot = telebot.TeleBot('')

# –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –æ—Ç—Ä–∏–º–∞–Ω–æ—ó –ø–æ–≥–æ–¥–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
user_weather = {}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏
def get_weather(city):
    weather_url = f'http://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_KEY}&units=metric'
    response = requests.get(weather_url)
    data = response.json()
    temperature = data['main']['temp']

    description = data['weather'][0]['description']
    humidity = data['main']['humidity']
    wind_speed = data['wind']['speed']
    pressure = data['main']['pressure']
    rain_probability = data.get('rain', {}).get('1h', 0)  # –ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –¥–æ—â—É –∑–∞ –≥–æ–¥–∏–Ω—É, —è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–æ
    wind_direction = data['wind'].get('deg', '–ù/–î')  # –ù–∞–ø—Ä—è–º –≤—ñ—Ç—Ä—É


    weather_info = f"üå§–ü–æ–≥–æ–¥–∞ –≤ –º—ñ—Å—Ç—ñ {city}:\nüå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C\nüå§–û–ø–∏—Å: {description}\nüíß–í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity}%\nüí®–®–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É: {wind_speed} –º/—Å\nüå¨–í—ñ—Ç–µ—Ä: {wind_direction}¬∞\n‚òîÔ∏è–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –¥–æ—â—É: {rain_probability}%\nüå´–¢–∏—Å–∫: {pressure} –≥–ü–∞"


    return weather_info

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏ –Ω–∞ 3 –¥–Ω—ñ
def get_weather_3_days(city):
    weather_3_days_url = f'http://api.openweathermap.org/data/2.5/forecast?q={city}&appid={API_KEY}&units=metric'
    response = requests.get(weather_3_days_url)
    data = response.json()

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —î –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É
    forecasts = data.get('list', [])

    if not forecasts:
        raise Exception("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –ø–æ–≥–æ–¥—É –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—ñ 3 –¥–Ω—ñ.")

    # –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è
    today_forecast = forecasts[0]
    tomorrow_forecast = forecasts[8]  # –ü–µ—Ä–µ–¥–±–∞—á–∞—î–º–æ 8 —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤ –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–Ω—è
    day_after_tomorrow_forecast = forecasts[16]  # –ü–µ—Ä–µ–¥–±–∞—á–∞—î–º–æ 8 —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤ –¥–ª—è –ø—ñ—Å–ª—è–∑–∞–≤—Ç—Ä–∞

    # –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è
    today_info = format_weather_info(today_forecast)
    tomorrow_info = format_weather_info(tomorrow_forecast)
    day_after_tomorrow_info = format_weather_info(day_after_tomorrow_forecast)

    # –û–±'—î–¥–Ω–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –≤—Å—ñ—Ö —Ç—Ä—å–æ—Ö –¥–Ω—ñ–≤
    weather_info_3_days = f"–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ:\n{today_info}\n\n–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n{tomorrow_info}\n\n–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ –ø—ñ—Å–ª—è–∑–∞–≤—Ç—Ä–∞:\n{day_after_tomorrow_info}"

    return weather_info_3_days

def get_weather_5_days(city):
    weather_5_days_url = f'http://api.openweathermap.org/data/2.5/forecast?q={city}&appid={API_KEY}&units=metric'
    response = requests.get(weather_5_days_url)
    data = response.json()

    forecasts = data.get('list', [])

    if not forecasts:
        raise Exception("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –ø–æ–≥–æ–¥—É –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—ñ 5 –¥–Ω—ñ–≤.")

    # –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è
    day1_forecast = forecasts[0]
    day2_forecast = forecasts[8]  # 8 —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤ –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–Ω—è
    day3_forecast = forecasts[16]  # 8 —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤ –¥–ª—è –ø—ñ—Å–ª—è–∑–∞–≤—Ç—Ä–∞
    day4_forecast = forecasts[24]  # 8 —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤ –¥–ª—è —á–µ—Ä–µ–∑ 3 –¥–Ω—ñ
    day5_forecast = forecasts[32]  # 8 —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤ –¥–ª—è —á–µ—Ä–µ–∑ 4 –¥–Ω—ñ

    # –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è
    day1_info = format_weather_info(day1_forecast)
    day2_info = format_weather_info(day2_forecast)
    day3_info = format_weather_info(day3_forecast)
    day4_info = format_weather_info(day4_forecast)
    day5_info = format_weather_info(day5_forecast)

    # –û–±'—î–¥–Ω–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –≤—Å—ñ—Ö –ø'—è—Ç–∏ –¥–Ω—ñ–≤
    weather_info_5_days = f"–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ:\n{day1_info}\n\n–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n{day2_info}\n\n–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ –ø—ñ—Å–ª—è–∑–∞–≤—Ç—Ä–∞:\n{day3_info}\n\n–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ —á–µ—Ä–µ–∑ 3 –¥–Ω—ñ:\n{day4_info}\n\n–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ —á–µ—Ä–µ–∑ 4 –¥–Ω—ñ:\n{day5_info}"

    return weather_info_5_days

def format_weather_info(forecast):
    # –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑ –ø—Ä–æ–≥–Ω–æ–∑—É —Ç–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
    temperature = forecast.get('main', {}).get('temp', '–ù/–î')
    description = forecast.get('weather', [{}])[0].get('description', '–ù/–î')
    humidity = forecast.get('main', {}).get('humidity', '–ù/–î')
    wind_speed = forecast.get('wind', {}).get('speed', '–ù/–î')
    pressure = forecast.get('main', {}).get('pressure', '–ù/–î')
    rain_probability = forecast.get('rain', {}).get('1h', 0)  # –ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –¥–æ—â—É –∑–∞ –≥–æ–¥–∏–Ω—É, —è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–æ
    wind_direction = forecast.get('wind', {}).get('deg', '–ù/–î')  # –ù–∞–ø—Ä—è–º –≤—ñ—Ç—Ä—É

    return f"üå§ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C, –û–ø–∏—Å: {description}\nüåß –í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity}%, –®–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É: {wind_speed} –º/—Å\nüå§ –¢–∏—Å–∫: {pressure} –≥–ü–∞, –ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –¥–æ—â—É: {rain_probability}%, –ù–∞–ø—Ä—è–º –≤—ñ—Ç—Ä—É: {wind_direction}¬∞"



# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id

    # –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –≤ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç—ñ
    image_url = 'https://m.lifecell.ua/uploads/cache/cf/b4/cfb49f1f7d5717b262aeef69f5b6bbbd.jpg'

    # –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º
    image = requests.get(image_url)

    # –í—ñ–¥–ø—Ä–∞–≤—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    bot.send_photo(chat_id, image.content, caption="–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç, —è–∫–∏–π –Ω–∞–¥–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≥–æ–¥—É.üå§ –í–≤–µ–¥–∏ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É.")

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –º—ñ—Å—Ç–∞ –≤ —Å–ª–æ–≤–Ω–∏–∫—É user_weather
    user_weather[chat_id] = {'city': None, 'timestamp': 0}


# –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ —Ç–µ–∫—Å—Ç–æ–º
@bot.message_handler(func=lambda message: True)
def send_weather(message):
    chat_id = message.chat.id
    city = message.text

    if chat_id not in user_weather or time.time() - user_weather[chat_id]['timestamp'] >= 3 * 60 * 60:
        try:
            weather_info = get_weather(city)
            user_weather[chat_id] = {'weather': weather_info, 'city': city, 'timestamp': time.time()}
        except Exception as e:
            error_message = "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ–≥–æ–¥–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞ —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."
            bot.send_message(chat_id, error_message)
            return
    else:
        weather_info = user_weather[chat_id]['weather']

    markup = types.InlineKeyboardMarkup()
    button_change_city = types.InlineKeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ', callback_data='change_city')
    button_weather_3_days = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—ñ', callback_data='weather_3_days')
    button_weather_5_days = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 5 –¥–Ω—ñ–≤', callback_data='weather_5_days')
    button_hourly_weather = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –∫–æ–∂–Ω—ñ 3 –≥–æ–¥–∏–Ω–∏', callback_data='hourly_weather')
    markup.add(button_change_city, button_weather_3_days, button_weather_5_days, button_hourly_weather)

    bot.send_message(chat_id, weather_info, reply_markup=markup)


# ...

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏ –∫–æ–∂–Ω—ñ 3 –≥–æ–¥–∏–Ω–∏ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ
def get_hourly_weather_today(city):
    hourly_weather_url = f'http://api.openweathermap.org/data/2.5/forecast?q={city}&appid={API_KEY}&units=metric'
    response = requests.get(hourly_weather_url)
    data = response.json()

    forecasts = data.get('list', [])

    if not forecasts:
        raise Exception("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –ø–æ–≥–æ–¥—É –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö 3 –≥–æ–¥–∏–Ω.")

    # –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –∫–æ–∂–Ω–æ—ó 3-—ó –≥–æ–¥–∏–Ω–∏ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ
    today = time.strftime("%Y-%m-%d")
    hourly_info = ""
    for forecast in forecasts:
        forecast_time = forecast.get('dt_txt', '–ù/–î')
        if today in forecast_time and forecast_time.endswith(("00:00:00", "03:00:00", "06:00:00", "09:00:00", "12:00:00", "15:00:00", "18:00:00", "21:00:00")):
            hourly_info += format_hourly_weather_info(forecast) + "\n"

    return hourly_info

# ...


def format_hourly_weather_info(forecast):
    # –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑ –ø—Ä–æ–≥–Ω–æ–∑—É —Ç–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
    time = forecast.get('dt_txt', '–ù/–î')
    temperature = forecast.get('main', {}).get('temp', '–ù/–î')
    description = forecast.get('weather', [{}])[0].get('description', '–ù/–î')
    humidity = forecast.get('main', {}).get('humidity', '–ù/–î')
    wind_speed = forecast.get('wind', {}).get('speed', '–ù/–î')

    return f"‚è∞ –ß–∞—Å: {time}, –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C, –û–ø–∏—Å: {description}, –í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity}%, –®–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É: {wind_speed} –º/—Å"



# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–≥–æ–¥–∞ –∫–æ–∂–Ω—ñ 3 –≥–æ–¥–∏–Ω–∏"
@bot.callback_query_handler(func=lambda call: call.data == 'hourly_weather')
def handle_hourly_weather(call):
    chat_id = call.message.chat.id
    city = user_weather.get(chat_id, {}).get('city')

    try:
        hourly_weather_info = get_hourly_weather_today(city)

        markup = types.InlineKeyboardMarkup()
        button_change_city = types.InlineKeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ', callback_data='change_city')
        button_weather_3_days = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—ñ', callback_data='weather_3_days')
        button_weather_5_days = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 5 –¥–Ω—ñ–≤', callback_data='weather_5_days')
        markup.add(button_change_city, button_weather_3_days, button_weather_5_days)

        bot.send_message(chat_id, hourly_weather_info, reply_markup=markup)
    except Exception as e:
        error_message = "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ–≥–æ–¥–∏ –∫–æ–∂–Ω—ñ 3 –≥–æ–¥–∏–Ω–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."
        bot.send_message(chat_id, error_message)




# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏ –Ω–∞ 3 –¥–Ω—ñ
def get_weather_3_days(city):
    weather_3_days_url = f'http://api.openweathermap.org/data/2.5/forecast?q={city}&appid={API_KEY}&units=metric'
    response = requests.get(weather_3_days_url)
    data = response.json()

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —î –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É
    forecasts = data.get('list', [])

    if not forecasts:
        raise Exception("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –ø–æ–≥–æ–¥—É –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—ñ 3 –¥–Ω—ñ.")

    # –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è
    today_forecast = forecasts[0]
    tomorrow_forecast = forecasts[8]  # –ü–µ—Ä–µ–¥–±–∞—á–∞—î–º–æ 8 —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤ –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–Ω—è
    day_after_tomorrow_forecast = forecasts[16]  # –ü–µ—Ä–µ–¥–±–∞—á–∞—î–º–æ 8 —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤ –¥–ª—è –ø—ñ—Å–ª—è–∑–∞–≤—Ç—Ä–∞

    # –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è
    today_info = format_weather_info(today_forecast)
    tomorrow_info = format_weather_info(tomorrow_forecast)
    day_after_tomorrow_info = format_weather_info(day_after_tomorrow_forecast)

    # –û–±'—î–¥–Ω–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –≤—Å—ñ—Ö —Ç—Ä—å–æ—Ö –¥–Ω—ñ–≤
    weather_info_3_days = f"–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ:\n{today_info}\n\n–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n{tomorrow_info}\n\n–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ –ø—ñ—Å–ª—è–∑–∞–≤—Ç—Ä–∞:\n{day_after_tomorrow_info}"

    return weather_info_3_days

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—ñ"
@bot.callback_query_handler(func=lambda call: call.data == 'weather_3_days')
def handle_weather_3_days(call):
    chat_id = call.message.chat.id
    city = user_weather.get(chat_id, {}).get('city')

    try:
        weather_info_3_days = get_weather_3_days(city)

        markup = types.InlineKeyboardMarkup()
        button_change_city = types.InlineKeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ', callback_data='change_city')
        button_weather_5_days = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 5 –¥–Ω—ñ–≤', callback_data='weather_5_days')
        button_hourly_weather = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –∫–æ–∂–Ω—ñ 3 –≥–æ–¥–∏–Ω–∏', callback_data='hourly_weather')
        markup.add(button_change_city, button_weather_5_days, button_hourly_weather)

        bot.send_message(chat_id, weather_info_3_days, reply_markup=markup)
    except Exception as e:
        error_message = "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ–≥–æ–¥–∏ –Ω–∞ 3 –¥–Ω—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."
        bot.send_message(chat_id, error_message)

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–≥–æ–¥–∞ –Ω–∞ 5 –¥–Ω—ñ–≤"
@bot.callback_query_handler(func=lambda call: call.data == 'weather_5_days')
def handle_weather_5_days(call):
    chat_id = call.message.chat.id
    city = user_weather.get(chat_id, {}).get('city')

    try:
        weather_info_5_days = get_weather_5_days(city)

        markup = types.InlineKeyboardMarkup()
        button_change_city = types.InlineKeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ', callback_data='change_city')
        button_weather_3_days = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—ñ', callback_data='weather_3_days')
        button_hourly_weather = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –∫–æ–∂–Ω—ñ 3 –≥–æ–¥–∏–Ω–∏', callback_data='hourly_weather')
        markup.add(button_change_city, button_weather_3_days, button_hourly_weather)

        bot.send_message(chat_id, weather_info_5_days, reply_markup=markup)
    except Exception as e:
        error_message = "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ–≥–æ–¥–∏ –Ω–∞ 5 –¥–Ω—ñ–≤. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."
        bot.send_message(chat_id, error_message)

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: call.data == 'change_city')
def handle_button_click(call):
    chat_id = call.message.chat.id
    bot.send_message(chat_id, '–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –Ω–æ–≤–æ–≥–æ –º—ñ—Å—Ç–∞:')

    # –ó–∞–ø–∏—Å—É—î–º–æ —Å—Ç–∞–Ω —Ä–æ–∑–º–æ–≤–∏ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –±–∞–∂–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ
    bot.register_next_step_handler(call.message, change_city)

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–ü–æ–≥–æ–¥–∞ –Ω–∞ 5 –¥–Ω—ñ–≤"
    markup = types.InlineKeyboardMarkup()
    button_change_city = types.InlineKeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ', callback_data='change_city')
    button_weather_5_days = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 5 –¥–Ω—ñ–≤', callback_data='weather_5_days')
    markup.add(button_change_city, button_weather_5_days)

    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–µ—Ç–æ–¥—É edit_message_reply_markup –¥–ª—è –∑–º—ñ–Ω–∏ —Ä–æ–∑–º—ñ—Ç–∫–∏ —ñ—Å–Ω—É—é—á–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    bot.edit_message_reply_markup(chat_id=chat_id, message_id=call.message.message_id, reply_markup=markup)

# –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ: –í–∏ –º–æ–∂–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —Ç–∞–∫–æ–∂ —Ñ—É–Ω–∫—Ü—ñ—é change_city –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ "–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 —Ç–∞ 5 –¥–Ω—ñ–≤" —Ç–∞ "–ü–æ–≥–æ–¥–∞ –∫–æ–∂–Ω—ñ 3 –≥–æ–¥–∏–Ω–∏" –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏ –º—ñ—Å—Ç–∞.
def change_city(message):
    chat_id = message.chat.id
    city = message.text

    try:
        weather_info = get_weather(city)
        user_weather[chat_id] = {'weather': weather_info, 'city': city, 'timestamp': time.time()}
        success_message = f"–ú—ñ—Å—Ç–æ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ {city}."
        bot.send_message(chat_id, success_message)
    except Exception as e:
        error_message = "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ–≥–æ–¥–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞ —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."
        bot.send_message(chat_id, error_message)
        return

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –∑–º—ñ–Ω–∏ –º—ñ—Å—Ç–∞ —Ç–∞ –ø–æ–≥–æ–¥–∏
    markup = types.InlineKeyboardMarkup()
    button_change_city = types.InlineKeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ', callback_data='change_city')
    button_weather_3_days = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—ñ', callback_data='weather_3_days')
    button_weather_5_days = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –Ω–∞ 5 –¥–Ω—ñ–≤', callback_data='weather_5_days')
    button_hourly_weather = types.InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –∫–æ–∂–Ω—ñ 3 –≥–æ–¥–∏–Ω–∏', callback_data='hourly_weather')
    markup.add(button_change_city, button_weather_3_days, button_weather_5_days, button_hourly_weather)

    bot.send_message(chat_id, weather_info, reply_markup=markup)


# –ó–∞–ø—É—Å–∫ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
bot.polling()